services:
  postgres-airflow:
    image: postgres:15
    container_name: postgres-airflow
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - pgdata_airflow:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  postgres-cities:
    image: postgres:15
    container_name: postgres-cities
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: cities
    volumes:
      - pgdata_cities:/var/lib/postgresql/data
    ports:
      - "5434:5432"

  postgres-raw-data:
    image: postgres:15
    container_name: postgres-raw-data
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: raw
    volumes:
      - pgdata_raw_data:/var/lib/postgresql/data
    ports:
      - "5435:5432"

  postgres-clean-data:
    image: postgres:15
    container_name: postgres-clean-data
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: clean
    volumes:
      - pgdata_clean_data:/var/lib/postgresql/data
    ports:
      - "5436:5432"

  postgres-mlflow:
    image: postgres:15
    container_name: postgres-mlflow
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: mlflow
    volumes:
      - pgdata_mlflow:/var/lib/postgresql/data
    ports:
      - "5433:5432"


  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL:
        airflow@airflow.com
      PGADMIN_DEFAULT_PASSWORD:
        airflow
    ports:
      - '8081:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres-airflow
      - postgres-mlflow


  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    container_name: mlflow
    restart: always
    depends_on:
      - postgres-mlflow
      - mlflow-init
    ports:
      - "5000:5000"
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:5000
    volumes:
      - ./mlflow/mlruns:/mlflow/mlruns
    command: >
      mlflow server
      --backend-store-uri postgresql://airflow:airflow@postgres-mlflow:5432/mlflow
      --default-artifact-root /mlflow/mlruns
      --host 0.0.0.0
      --port 5000

  mlflow-init:
    image: python:3.9-slim
    depends_on:
      - postgres-mlflow
    entrypoint: >
      /bin/sh -c "
      pip install mlflow psycopg2-binary &&
      mlflow db upgrade postgresql://airflow:airflow@postgres-mlflow:5432/mlflow
      "


  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow_init
    depends_on:
      - postgres-airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: supersecret123
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/ml_code:/opt/airflow/ml_code
    entrypoint: >
      bash -c "airflow db migrate &&
               airflow users create --username airflow --firstname airflow --lastname airflow --role Admin --email airflow@example.com --password airflow"

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow_webserver
    restart: always
    depends_on:
      - airflow-init
      - postgres-raw-data
      - postgres-clean-data
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: supersecret123
      AIRFLOW_CONN_POSTGRES_RAW_DATA: >-
        postgres://airflow:airflow@postgres-raw-data:5432/raw
      AIRFLOW_CONN_POSTGRES_CLEAN_DATA: >-
        postgres://airflow:airflow@postgres-clean-data:5432/clean
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/ml_code:/opt/airflow/ml_code
      - ./mlflow/mlruns:/mlflow/mlruns
      - ./airflow/resources:/opt/airflow/resources
    ports:
      - "8080:8080"
    command: airflow webserver

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow_scheduler
    restart: always
    depends_on:
      - airflow-init
      - postgres-raw-data
      - postgres-clean-data
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: supersecret123
      AIRFLOW_CONN_POSTGRES_RAW_DATA: >-
        postgres://airflow:airflow@postgres-raw-data:5432/raw
      AIRFLOW_CONN_POSTGRES_CLEAN_DATA: >-
        postgres://airflow:airflow@postgres-clean-data:5432/clean
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/ml_code:/opt/airflow/ml_code
      - ./mlflow/mlruns:/mlflow/mlruns
      - ./airflow/resources:/opt/airflow/resources
    command: airflow scheduler


volumes:
  pgdata_airflow:
  pgdata_mlflow:
  pgadmin_data:
  pgdata_cities:
  pgdata_raw_data:
  pgdata_clean_data:
